service: docs-site

provider:
  name: aws
  stage: dev
  region: eu-west-2
  stackTags:
    Name: ${self:service}
    Description: A simple static site for documentation
    Owner: ${self:custom.tags.owner}
    OwnerFunction: ${self:custom.tags.ownerFunction}
    Customer: ${self:custom.tags.customer}

plugins:
  - serverless-webpack
  - serverless-offline

custom:
  bucketName: ${self:provider.stage}-docs-site-${self:provider.region}
  tags:
    owner: ${env:OWNER,'N/A'}
    ownerFunction: ${env:OWNER_FUNCTION,'N/A'}
    customer: ${env:CUSTOMER,'i1'}
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

resources:
  Resources:
    DocsSiteBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.bucketName}
        WebsiteConfiguration:
          IndexDocument: index.html
        PublicAccessBlockConfiguration:
          BlockPublicAcls: false
          BlockPublicPolicy: false
          IgnorePublicAcls: false
          RestrictPublicBuckets: false
    DocsPagesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: docs-pages
        AttributeDefinitions:
          - AttributeName: slug
            AttributeType: S
        KeySchema:
          - AttributeName: slug
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
          
functions:
  createPage:
    handler: handler.createPage
    events:
      - http:
          path: pages
          method: post
          cors: true
          
  getPage:
    handler: handler.getPage
    events:
      - http:
          path: pages/{slug}
          method: get
          cors: true